Parsed test spec with 2 sessions

starting permutation: s1b s1_insert_150 s1r s1_show_partitions s2b s2_insert_150 s2c s2_show_partitions
set_spawn_using_bgw
-------------------
                   
(1 row)

step s1b: BEGIN;
step s1_insert_150: INSERT INTO range_rel SELECT generate_series(1,   150);
step s1r: ROLLBACK;
step s1_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
(2 rows)

step s2b: BEGIN;
step s2_insert_150: INSERT INTO range_rel SELECT generate_series(1,   150);
step s2c: COMMIT;
step s2_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
(2 rows)


starting permutation: s1b s1_insert_150 s1r s1_show_partitions s2b s2_insert_300 s2c s2_show_partitions
set_spawn_using_bgw
-------------------
                   
(1 row)

step s1b: BEGIN;
step s1_insert_150: INSERT INTO range_rel SELECT generate_series(1,   150);
step s1r: ROLLBACK;
step s1_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
(2 rows)

step s2b: BEGIN;
step s2_insert_300: INSERT INTO range_rel SELECT generate_series(151, 300);
step s2c: COMMIT;
step s2_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
CHECK (((id >= 201) AND (id < 301)))
(3 rows)


starting permutation: s1b s1_insert_300 s1r s1_show_partitions s2b s2_insert_150 s2c s2_show_partitions
set_spawn_using_bgw
-------------------
                   
(1 row)

step s1b: BEGIN;
step s1_insert_300: INSERT INTO range_rel SELECT generate_series(151, 300);
step s1r: ROLLBACK;
step s1_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
CHECK (((id >= 201) AND (id < 301)))
(3 rows)

step s2b: BEGIN;
step s2_insert_150: INSERT INTO range_rel SELECT generate_series(1,   150);
step s2c: COMMIT;
step s2_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
CHECK (((id >= 201) AND (id < 301)))
(3 rows)


starting permutation: s1b s1_insert_150 s2b s2_insert_300 s1r s2r s2_show_partitions
set_spawn_using_bgw
-------------------
                   
(1 row)

step s1b: BEGIN;
step s1_insert_150: INSERT INTO range_rel SELECT generate_series(1,   150);
step s2b: BEGIN;
step s2_insert_300: INSERT INTO range_rel SELECT generate_series(151, 300);
step s1r: ROLLBACK;
step s2r: ROLLBACK;
step s2_show_partitions: SELECT pg_get_constraintdef(c.oid) FROM pg_inherits i LEFT JOIN pg_constraint c
							  ON c.conrelid = i.inhrelid
							  WHERE i.inhparent = 'range_rel'::regclass AND c.contype = 'c'
							  ORDER BY c.oid;
pg_get_constraintdef                
------------------------------------
CHECK (((id >= 1) AND (id < 101)))  
CHECK (((id >= 101) AND (id < 201)))
CHECK (((id >= 201) AND (id < 301)))
(3 rows)

