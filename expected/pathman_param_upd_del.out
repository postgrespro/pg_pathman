\set VERBOSITY terse
SET search_path = 'public';
CREATE EXTENSION pg_pathman;
CREATE SCHEMA param_upd_del;
CREATE TABLE param_upd_del.test(key INT4 NOT NULL, val INT4);
SELECT create_hash_partitions('param_upd_del.test', 'key', 10);
 create_hash_partitions 
------------------------
                     10
(1 row)

INSERT INTO param_upd_del.test SELECT i, i FROM generate_series(1, 1000) i;
ANALYZE;
PREPARE upd(INT4) AS UPDATE param_upd_del.test SET val = val + 1 WHERE key = $1;
EXPLAIN (COSTS OFF) EXECUTE upd(10);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(11);
         QUERY PLAN         
----------------------------
 Update on test_9
   ->  Seq Scan on test_9
         Filter: (key = 11)
(3 rows)

DEALLOCATE upd;
PREPARE upd(INT4) AS UPDATE param_upd_del.test SET val = val + 1 WHERE key = ($1 + 3) * 2;
EXPLAIN (COSTS OFF) EXECUTE upd(5);
         QUERY PLAN         
----------------------------
 Update on test_7
   ->  Seq Scan on test_7
         Filter: (key = 16)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(5);
         QUERY PLAN         
----------------------------
 Update on test_7
   ->  Seq Scan on test_7
         Filter: (key = 16)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(5);
         QUERY PLAN         
----------------------------
 Update on test_7
   ->  Seq Scan on test_7
         Filter: (key = 16)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(5);
         QUERY PLAN         
----------------------------
 Update on test_7
   ->  Seq Scan on test_7
         Filter: (key = 16)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(5);
         QUERY PLAN         
----------------------------
 Update on test_7
   ->  Seq Scan on test_7
         Filter: (key = 16)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(5);
         QUERY PLAN         
----------------------------
 Update on test_7
   ->  Seq Scan on test_7
         Filter: (key = 16)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(6);
         QUERY PLAN         
----------------------------
 Update on test_3
   ->  Seq Scan on test_3
         Filter: (key = 18)
(3 rows)

DEALLOCATE upd;
PREPARE del(INT4) AS DELETE FROM param_upd_del.test WHERE key = $1;
EXPLAIN (COSTS OFF) EXECUTE del(10);
         QUERY PLAN         
----------------------------
 Delete on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
         QUERY PLAN         
----------------------------
 Delete on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
         QUERY PLAN         
----------------------------
 Delete on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
         QUERY PLAN         
----------------------------
 Delete on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
         QUERY PLAN         
----------------------------
 Delete on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
         QUERY PLAN         
----------------------------
 Delete on test_3
   ->  Seq Scan on test_3
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(11);
         QUERY PLAN         
----------------------------
 Delete on test_9
   ->  Seq Scan on test_9
         Filter: (key = 11)
(3 rows)

DEALLOCATE del;
DROP TABLE param_upd_del.test CASCADE;
NOTICE:  drop cascades to 10 other objects
DROP SCHEMA param_upd_del;
DROP EXTENSION pg_pathman;
